import{isValidElement as e,cloneElement as t}from"react";import{I as n,a as r,j as o,d as a,b as s,c as i}from"./initializeConfig-BB2Ue6Z9.js";import c from"intl-messageformat";function u(e,t){return e?Object.keys(e).reduce(((n,r)=>(n[r]={timeZone:t,...e[r]},n)),{}):e}function m(e,t,n,r){const a=o(r,n);if(!t)throw new Error("No messages available at `".concat(r,"`."));let s=t;return n.split(".").forEach((t=>{const n=s[t];if(null==t||null==n)throw new Error("Could not resolve `".concat(a,"` in messages for locale `").concat(e,"`."));s=n})),s}function l(i){const l=function(e,t,o){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:a;try{if(!t)throw new Error("No messages were configured on the provider.");const n=o?m(e,t,o):t;if(!n)throw new Error("No messages for namespace `".concat(o,"` found."));return n}catch(e){const t=new n(r.MISSING_MESSAGE,e.message);return s(t),t}}(i.locale,i.messages,i.namespace,i.onError);return function(a){let{defaultTranslationValues:i,formats:l,formatters:f,getMessageFallback:g=s,locale:d,messagesOrError:p,namespace:y,onError:h,timeZone:v}=a;function w(e,t,r){const o=new n(t,r);return h(o),g({error:o,key:e,namespace:y})}function E(a,s,h){if(p instanceof n)return g({error:p,key:a,namespace:y});const E=p;let T,S;try{T=m(d,E,a,y)}catch(e){return w(a,r.MISSING_MESSAGE,e.message)}if("object"==typeof T){let e,t;return Array.isArray(T)?(e=r.INVALID_MESSAGE,t="Message at `".concat(o(y,a),"` resolved to an array, but only strings are supported. See https://next-intl-docs.vercel.app/docs/usage/messages#arrays-of-messages")):(e=r.INSUFFICIENT_PATH,t="Message at `".concat(o(y,a),"` resolved to an object, but only strings are supported. Use a `.` to retrieve nested messages. See https://next-intl-docs.vercel.app/docs/usage/messages#structuring-messages")),w(a,e,t)}const b=function(e,t){if(t)return;const n=e.replace(/'([{}])/gi,"$1");return/<|{/.test(n)?void 0:n}(T,s);if(b)return b;try{S=f.getMessageFormat(T,d,function(e,t){const n=t?{...e,dateTime:u(e.dateTime,t)}:e,r=c.formats.date,o=t?u(r,t):r,a=c.formats.time,s=t?u(a,t):a;return{...n,date:{...o,...null==n?void 0:n.dateTime},time:{...s,...null==n?void 0:n.dateTime}}}({...l,...h},v),{formatters:{...f,getDateTimeFormat:(e,t)=>f.getDateTimeFormat(e,{timeZone:v,...t})}})}catch(e){const t=e;return w(a,r.INVALID_MESSAGE,t.message+("originalMessage"in t?" (".concat(t.originalMessage,")"):""))}try{const n=S.format(function(n){if(0===Object.keys(n).length)return;const r={};return Object.keys(n).forEach((o=>{let a=0;const s=n[o];let i;i="function"==typeof s?n=>{const r=s(n);return e(r)?t(r,{key:o+a++}):r}:s,r[o]=i})),r}({...i,...s}));if(null==n)throw new Error("Unable to format `".concat(a,"` in ").concat(y?"namespace `".concat(y,"`"):"messages"));return e(n)||Array.isArray(n)||"string"==typeof n?n:String(n)}catch(e){return w(a,r.FORMATTING_ERROR,e.message)}}function T(e,t,n){const o=E(e,t,n);return"string"!=typeof o?w(e,r.INVALID_MESSAGE,"The message `".concat(e,"` in ").concat(y?"namespace `".concat(y,"`"):"messages"," didn't resolve to a string. If you want to format rich text, use `t.rich` instead.")):o}return T.rich=E,T.markup=(e,t,o)=>{const a=E(e,t,o);if("string"!=typeof a){const t=new n(r.FORMATTING_ERROR,"`t.markup` only accepts functions for formatting that receive and return strings.\n\nE.g. t.markup('markup', {b: (chunks) => `<b>${chunks}</b>`})");return h(t),g({error:t,key:e,namespace:y})}return a},T.raw=e=>{if(p instanceof n)return g({error:p,key:e,namespace:y});const t=p;try{return m(d,t,e,y)}catch(t){return w(e,r.MISSING_MESSAGE,t.message)}},T}({...i,messagesOrError:l})}function f(e,t){return e===t?void 0:e.slice((t+".").length)}const g=60,d=60*g,p=24*d,y=7*p,h=p*(365/12),v=3*h,w=365*p,E={second:1,seconds:1,minute:g,minutes:g,hour:d,hours:d,day:p,days:p,week:y,weeks:y,month:h,months:h,quarter:v,quarters:v,year:w,years:w};function T(e){let{_formatters:t=i(),formats:o,locale:s,now:c,onError:u=a,timeZone:m}=e;function l(e){var t;return null!==(t=e)&&void 0!==t&&t.timeZone||(m?e={...e,timeZone:m}:u(new n(r.ENVIRONMENT_FALLBACK,"The `timeZone` parameter wasn't provided and there is no global default configured. Consider adding a global default to avoid markup mismatches caused by environment differences. Learn more: https://next-intl-docs.vercel.app/docs/configuration#time-zone"))),e}function f(e,t,o,a){let s;try{s=function(e,t){let o;if("string"==typeof t){const a=t;if(o=null==e?void 0:e[a],!o){const e=new n(r.MISSING_FORMAT,"Format `".concat(a,"` is not available. You can configure it on the provider or provide custom options."));throw u(e),e}}else o=t;return o}(t,e)}catch(e){return a()}try{return o(s)}catch(e){return u(new n(r.FORMATTING_ERROR,e.message)),a()}}function v(e,n){return f(n,null==o?void 0:o.dateTime,(n=>(n=l(n),t.getDateTimeFormat(s,n).format(e))),(()=>String(e)))}function T(){return c||(u(new n(r.ENVIRONMENT_FALLBACK,"The `now` parameter wasn't provided and there is no global default configured. Consider adding a global default to avoid markup mismatches caused by environment differences. Learn more: https://next-intl-docs.vercel.app/docs/configuration#now")),new Date)}return{dateTime:v,number:function(e,n){return f(n,null==o?void 0:o.number,(n=>t.getNumberFormat(s,n).format(e)),(()=>String(e)))},relativeTime:function(e,o){try{let n,r;const a={};o instanceof Date||"number"==typeof o?n=new Date(o):o&&(n=null!=o.now?new Date(o.now):T(),r=o.unit,a.style=o.style,a.numberingSystem=o.numberingSystem),n||(n=T());const i=(new Date(e).getTime()-n.getTime())/1e3;r||(r=function(e){const t=Math.abs(e);return t<g?"second":t<d?"minute":t<p?"hour":t<y?"day":t<h?"week":t<w?"month":"year"}(i)),a.numeric="second"===r?"auto":"always";const c=function(e,t){return Math.round(e/E[t])}(i,r);return t.getRelativeTimeFormat(s,a).format(c,r)}catch(t){return u(new n(r.FORMATTING_ERROR,t.message)),String(e)}},list:function(e,n){const r=[],a=new Map;let i=0;for(const t of e){let e;"object"==typeof t?(e=String(i),a.set(e,t)):e=String(t),r.push(e),i++}return f(n,null==o?void 0:o.list,(e=>{const n=t.getListFormat(s,e).formatToParts(r).map((e=>"literal"===e.type?e.value:a.get(e.value)||e.value));return a.size>0?n:n.join("")}),(()=>String(e)))},dateTimeRange:function(e,n,r){return f(r,null==o?void 0:o.dateTime,(r=>(r=l(r),t.getDateTimeFormat(s,r).formatRange(e,n))),(()=>[v(e),v(n)].join(" – ")))}}}export{l as a,T as c,f as r};
