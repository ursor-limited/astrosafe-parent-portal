import React from 'react';
export declare const spin: import("@emotion/serialize").Keyframes;
export type ButtonVariant = 'primary' | 'secondary' | 'tertiary';
export type ButtonSize = 'large' | 'medium' | 'small' | 'tiny';
type ButtonState = 'enabled' | 'hover' | 'pressed';
type Mode = 'light' | 'dark';
export declare const HEIGHTS: Record<ButtonSize, number>;
export declare const ICON_SIZES: Record<ButtonSize, number>;
export declare const PADDINGS: Record<ButtonSize, {
    x: number;
    y: number;
}>;
export declare const BACKGROUND_COLORS: Record<Mode, Partial<Record<ButtonVariant, Partial<Record<ButtonState, string>>>>>;
export declare const FONT_COLORS: Record<Mode, Partial<Record<ButtonVariant, Partial<Record<ButtonState, string>>>>>;
export declare const BORDER_COLORS: Record<Mode, Partial<Record<ButtonVariant, Partial<Record<ButtonState, string>>>>>;
export interface UrsorButtonProps {
    children?: React.ReactNode;
    onClick?: () => void;
    variant?: ButtonVariant;
    size?: ButtonSize;
    fontSize?: string;
    paddingY?: string;
    backgroundColor?: string;
    borderColor?: string;
    hoverOpacity?: number;
    fontColor?: string;
    startIcon?: React.FC<React.SVGProps<SVGSVGElement>>;
    endIcon?: React.FC<React.SVGProps<SVGSVGElement>>;
    iconSize?: number;
    iconColor?: string;
    useNaturalIconColor?: boolean;
    disabled?: boolean;
    dark?: boolean;
    shadow?: boolean;
    strongShadow?: boolean;
    width?: string;
    height?: string;
    paddingX?: string;
    iconSpin?: boolean;
}
export declare function UrsorButton(props: UrsorButtonProps): JSX.Element;
export {};
